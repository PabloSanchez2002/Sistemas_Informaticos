1. Descargar la base de datos

Tareas:
    1. Diseño de la BD
        1.1 Diagrama ER
        1.2 Discutir el diseño de la BD
        1.3 Completar aquellos aspectos que se consideren necesarios
        1.4 Añadir a actualiza.sql:
            1.4.1 Triggers
            1.4.2 Un campo balance en la tabla customers
            1.4.3 Una nueva tabla de ratings para las valoraciones que ha dado cada usuario
            1.4.4 Dos nuevos campos a imdb movies
            1.4.5 Aumentar el campo password
        1.5 Crear un procedimiento que inicialice balance
        1.6 Añadir a actualiza.sql una llamada a dicho procedimiento

    Se deberá entregar al menos el diagrama ER tras los cambios del script actualiza.sql conviene revisar:
        claves primarias
        claves externas o extranjeras
        qué tablas son entidades, cuáles relaciones y cuáles atributos
        cardinalidad
        entidades débiles
        atributos multivaluados
        atributos derivados
        participación total
    Sabiendo que los precios de las películas se han ido incrementando un 2% anualmente, elaborar la consulta setPrice.sql que complete la columna 'price' de la tabla 'orderdetail',
sabiendo que el precio actual es el de la tabla 'products'.

        Una vez se disponga de esta información, realizar un procedimiento almacenado,
        setOrderAmount, que complete las columnas 'netamount' (suma de los precios de las
        películas del pedido) y 'totalamount' ('netamount' más impuestos) de la tabla 'orders' cuando
        éstas no contengan ningún valor. Invocad de forma manual la consulta de modificación
        setPrice y este procedimiento almacenado, para realizar una carga inicial.

        Realizar una función postgreSQL, getTopSales, que reciba como argumentos dos años diferentes y devuelva las películas que más se han vendido entre esos dos años, una por
año, ordenadas de mayor a menor por número de ventas

    Realizar una función postgreSQL, getTopActors, que reciba un parámetro “género” y que devuelva los actores o actrices que más veces han actuado en dicho género, ordenados de
más actuaciones a menos, siempre que hayan trabajado en más de 4 películas de ese género, con información de la película en la que debutaron para ese género, el año de esa
película y quién (o quiénes) dirigió esa película (pueden aparecer varios registros para el mismo actor porque hizo varias películas su primer año, varios directores para la misma
película, etc.)



    2. Integridad de los Datos:

    1. Para garantizar la integridad de los datos (los valores posibles de las columnas), crear las tablas correspondientes y convertir los atributos multivaluados ‘moviecountries’,
‘moviegenres’ y ‘movielanguages’ en relaciones entre la tabla ‘movies’ y las tablas creadas. Estos cambios también se incorporarán al script actualiza.sql
    2. Realizar un trigger, updOrders, que actualice la información de la tabla 'orders' cuando se añada, actualice o elimine un artículo del carrito